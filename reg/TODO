xlattice_go/reg/TODO

2013-09-27
    * need read lock on reg.members when we get size
    * need write lock when we add members

2013-09-25
    * FIX: mock_server_test only makes 2 clients

2013-09-24
    * modify functions in msg_handlers.go so that they are no longer    * DONE
        instance functions but look like
            func doClientMsg(h *InHandler)

    * packets.go readDate should handle partial reads, looping on count 
        until all bytes have been received
    * packets.go writeDate should handle partial writes, looping on count 
        until all bytes have gone

    * need to add conventional logging 

2013-09-20
    * several tests could obviously benefit from parallelizing: 
        they run one CPU at 100% while the others are more or less idle
        - look at cluster_member_test
        - also reg_cluster_test 

2013-09-18
    * RegCluster.AddMember(): improve handling of attempts to add 
        entries with the same name 

2013-09-16
    * regNode serialization follows practice in ../node: we first
        serialize BaseNode, then rest of Node, then fields of 
        RegNode
        - need Strings(), String(), Parse()

2013-09-13
    * FIX: ClientMsg does NOT include digsig, so server cannot verify
        that the client knows skPriv
    * longer term xlReg needs to be distributed, using Paxos for
        consensus
2013-09-12
    * build and thoroughly test ../cmd/xlReg
    * this stays on main branch
    * deploy on test:44444 as service

    * on regBeta branch figure out how to persist the registry in 
        such a way this it easily loads itself from disk after a 
        crash or reboot
    * when this is stable, merge back into main branch
        - and deploy on test:44444
    * document
    * deploy on salinas:44444
2013-09-04
    * complete crypto_test                                              * DONE
    * repackage so that the same approach can be used in other
        modules
        - presumably most of this moves to ../crypto/
    
