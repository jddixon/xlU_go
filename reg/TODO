xlattice_go/reg/TODO

2013-10-02
    * change protocol so that nodeID is assigned by server (to
        avoid Douceur's Sybil Attack)
        - so first variant of Client message has token + digSig
            * without clientID in token
        - second version has only clientID + digSig
        - either attaches client's token to the connection
    * NEEDS MORE THOUGHT - can't have a node without a nodeID,
        only nodes can contact the server

    * rename Get msg to GetCluster, Members to ClusterMembers           * DONE

    * code up RegNode serialization in reg/reg_node.go:
        - ParseRegNode()
        - String()
        - Strings()

    * code up Registry serialization in reg/registry.go:
        - ParseRegistry()
        - String()
        - Strings()

    * code up RegServer bits in reg/server.go:
        - Run()                                                         * DONE
        - ParseRegServer()
        - String()
        - Strings()

    * any errors found by InHandler should be logged

2013-10-01
    * InHandler.Run() needs range check on op or tag about line 169     * DONE
    * need locking for reg_cluster Members 
        - checking whether client is cluster member by name (read lock) * DONE
        - adding member to cluster by name (write lock)                 * DONE
        - checking whether client is cluster member by ID (read lock)
        - adding member to cluster by ID (write lock)                   * DONE
    * registry RegMembersByID should be dropped or used; if used
        - when members added to clusters
            * must read lock reg and check reg.RegMembersByID
            * must write lock when adding
        - but need to decide whether this is useful
            * and whether the intention is to prevent clients from
                belonging to more than one cluster (why??)
    * move relevant bits of MockServer into reg/server.go               * DONE
        - implement reg.Server.NewServer(...)                           * DONE
        - and reg.Server.Run(...)                                       * DONE
    * when this is running, drop into ../cmd/xlReg/xlReg

2013-09-30
    * xlReg loads from/saves to lfs (see 09-16 TODO)
    * xlReg 0.2.0 must have lfs, logging, load/save
    * deploy xlReg 0.2.0 on salinas:55555
2013-09-29
    * improve RegCluster.AddMember handling of dupe names
2013-09-24
    * packets.go readData should handle partial reads, looping on count 
        until all bytes have been received
    * packets.go writeData should handle partial writes, looping on count 
        until all bytes have gone
2013-09-20
    * several tests could obviously benefit from parallelizing: 
        they run one CPU at 100% while the others are more or less idle
        - look at cluster_member_test
        - also reg_cluster_test 
2013-09-16
    * regNode serialization follows practice in ../node: we first
        serialize BaseNode, then rest of Node, then fields of 
        RegNode
        - need Strings(), String(), Parse()
2013-09-13
    * URGENT FIX: ClientMsg does NOT include digsig, so server cannot 
        verify that the client knows skPriv
    * longer term xlReg needs to be distributed, using Paxos for
        consensus
2013-09-12
    * build and thoroughly test ../cmd/xlReg
    * this stays on main branch
    * deploy on test:44444 as service

    * on regBeta branch figure out how to persist the registry in 
        such a way this it easily loads itself from disk after a 
        crash or reboot
    * when this is stable, merge back into main branch
        - and deploy on test:44444
    * document
