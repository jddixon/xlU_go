xlattice_go/reg/TODO

2013-09-30
    * drop Hello and HelloReply from p.proto 
    * lfs for xlReg is myApp/xlReg for testing,
        /var/app/xlReg otherwise
    * xlReg loads from/saves to lfs (see 09-16 TODO)
    * xlReg listens on 33333 if testing (-T), 
        defaults to 44444 otherwise
    * need locking at the registry level when we
        - check whether name, id in use (read lock)
        - add cluster (write lock)
    * xlReg needs log
        - logs by default to LFS/log
    * reg needs version number for use by xlReg
        - currently 0.1.0
        - server ignores client-requested version number, replies 
            with current
        - 0.2.0 has lfs, logging, load/save
    * deploy xlReg 0.2.0 on salinas:55555

2013-09-29
    * improve RegCluster.AddMember handling of dupe names
    * when adding member check for entry in BNIMap
    * client.go needs to check op for all replies from server

2013-09-27
    * need read lock on RegCluster.members when we get size
    * need write lock when we add members

2013-09-25
    * FIX: mock_server_test only makes 2 clients                        * DONE

2013-09-24
    * modify functions in msg_handlers.go so that they are no longer    * DONE
        instance functions but look like
            func doClientMsg(h *InHandler)

    * packets.go readDate should handle partial reads, looping on count 
        until all bytes have been received
    * packets.go writeDate should handle partial writes, looping on count 
        until all bytes have gone

2013-09-20
    * several tests could obviously benefit from parallelizing: 
        they run one CPU at 100% while the others are more or less idle
        - look at cluster_member_test
        - also reg_cluster_test 

2013-09-16
    * regNode serialization follows practice in ../node: we first
        serialize BaseNode, then rest of Node, then fields of 
        RegNode
        - need Strings(), String(), Parse()

2013-09-13
    * FIX: ClientMsg does NOT include digsig, so server cannot verify
        that the client knows skPriv
    * longer term xlReg needs to be distributed, using Paxos for
        consensus
2013-09-12
    * build and thoroughly test ../cmd/xlReg
    * this stays on main branch
    * deploy on test:44444 as service

    * on regBeta branch figure out how to persist the registry in 
        such a way this it easily loads itself from disk after a 
        crash or reboot
    * when this is stable, merge back into main branch
        - and deploy on test:44444
    * document
